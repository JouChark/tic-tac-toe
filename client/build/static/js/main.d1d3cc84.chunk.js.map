{"version":3,"sources":["components/Board.js","App.js","index.js"],"names":["Board","socket","io","playTurn","e","emit","target","id","changeText","msg","document","getElementById","textContent","useEffect","window","addEventListener","on","turnId","mark","playerId","playerTurn","changeMark","winner","Fragment","cell","i","push","className","onClick","DisplayBoard","App","ReactDOM","render","StrictMode"],"mappings":"0MAwFeA,MArFf,WACE,IAAMC,EAASC,IAAG,qDA+BlB,SAASC,EAASC,GAChBH,EAAOI,KAAK,OAAQD,EAAEE,OAAOC,IAoB/B,SAASC,EAAWC,GACVC,SAASC,eAAe,UAC9BC,YAAcH,EAsBlB,OAvDAI,qBAAU,WACRC,OAAOC,iBAAiB,QAAQ,WAC9Bd,EAAOI,KAAK,eAIhBJ,EAAOe,GAAG,QAAQ,WAChBR,EAAW,2BAObK,qBAAU,WACRZ,EAAOe,GAAG,UAAU,SAACC,EAAQC,EAAMX,IAQrC,SAAoBY,EAAUF,GAE1BT,EADES,IAAWE,EACF,YAEA,mBAXXC,CAAWnB,EAAOM,GAAIU,GAClBC,GAmBR,SAAoBX,EAAIW,GACXR,SAASC,eAAeJ,GAC9BK,YAAcM,EApBfG,CAAWd,EAAIW,SAuBrBjB,EAAOe,GAAG,UAAU,SAAAM,GACdrB,EAAOM,KAAOe,EAChBd,EAAW,YACS,SAAXc,EACTd,EAAW,gBACFc,GACTd,EAAW,gBAIfP,EAAOe,GAAG,sBAAsB,WAC9BR,EAAW,iCAIX,eAAC,IAAMe,SAAP,WACE,mBAAGhB,GAAG,WACN,sBAAMA,GAAG,OAAT,SA7EiB,WAGnB,IAFA,IAAMiB,EAAO,GAEJC,EAAI,EAAGA,EAAI,EAAGA,IACnBD,EAAKE,KACH,qBAEAnB,GAAIkB,EACJE,UAAU,OACVC,QAASzB,EAJT,iBACKsB,IAUX,OAAOD,EA6DYK,S,MCpERC,MAXf,WACE,OACE,sBAAKH,UAAU,MAAf,UACE,iCACE,+CAEF,cAAC,EAAD,QCNNI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvB,SAASC,eAAe,W","file":"static/js/main.d1d3cc84.chunk.js","sourcesContent":["import React, { useEffect} from 'react';\nimport io from 'socket.io-client';\n\nfunction Board() {\n  const socket = io('https://dashboard.heroku.com/apps/tic-tac-toe-023');\n\n  const DisplayBoard = () => {\n    const cell = [];\n  \n    for (let i = 0; i < 9; i++) {\n        cell.push(\n          <div\n          key={i}\n          id={i}\n          className='cell'\n          onClick={playTurn}\n          >\n            &nbsp;\n          </div>\n        );\n    }\n  \n    return cell;\n  }\n\n  useEffect(() => {\n    window.addEventListener('load', () => {\n      socket.emit('enter');\n    });\n  });\n\n  socket.on('wait', () => {\n    changeText('Waiting for opponent');\n  });\n\n  function playTurn(e) {\n    socket.emit('play', e.target.id);\n  };\n\n  useEffect(() => {\n    socket.on('update', (turnId, mark, id) => {\n      playerTurn(socket.id, turnId);\n      if (mark) {\n        changeMark(id, mark);\n      }\n    });\n  });\n\n  function playerTurn(playerId, turnId) {\n    if (turnId === playerId) {\n      changeText('Your turn');\n    } else {\n      changeText(\"Opponent's turn\");\n    }\n  }\n\n  function changeText(msg) {\n    let p = document.getElementById('result');\n    p.textContent = msg;\n  }\n\n  function changeMark(id, mark) {\n    let cell = document.getElementById(id);\n    cell.textContent = mark;\n  }\n\n  socket.on('winner', winner => {\n    if (socket.id === winner) {\n      changeText('You Won!');\n    } else if (winner === 'draw') {\n      changeText(\"It's a Draw!\");\n    } else if (winner) {\n      changeText('You Lost!');\n    }\n  });\n  \n  socket.on('playerDisconnected', () => {\n    changeText(\"Your opponent disconnected\");\n  });\n  \n  return (\n    <React.Fragment>\n      <p id='result'></p>\n      <main id='main'>{DisplayBoard()}</main>\n    </React.Fragment>\n  );\n};\n\nexport default Board","import React from 'react';\nimport Board from './components/Board'\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className='App'>\n      <header>\n        <h1>TIC TAC TOE</h1>\n      </header>\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}